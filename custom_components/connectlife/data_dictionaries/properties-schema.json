{
  "$schema": "http://json-schema.org/draft-06/schema#",
  "$ref": "#/definitions/ConnectLifeDataDictionary",
  "definitions": {
    "ConnectLifeDataDictionary": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "device_type": {
          "title": "Device type",
          "type": "string",
          "examples": [
            "airconditioner",
            "dehumidifier",
            "dishwasher",
            "hob",
            "hood",
            "humidifier",
            "washing_machine",
            "tumble_dryer"
          ]
        },
        "properties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Property"
          }
        }
      },
      "required": [
        "properties"
      ],
      "title": "ConnectLife Data Dictionary"
    },
    "Property": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "property": {
          "title": "Property",
          "description": "Property name",
          "type": "string"
        },
        "binary_sensor": {
          "$ref": "#/definitions/BinarySensor"
        },
        "climate": {
          "$ref": "#/definitions/Climate"
        },
        "humidifier": {
          "$ref": "#/definitions/Humidifier"
        },
        "select": {
          "$ref": "#/definitions/Select"
        },
        "sensor": {
          "$ref": "#/definitions/Sensor"
        },
        "switch": {
          "$ref": "#/definitions/Switch"
        },
        "icon": {
          "type": "string",
          "title": "Icon",
          "description": "Icon to use for the entity.",
          "examples": [
            "mdi:alert",
            "mdi:dishwash-alert"
          ]
        },
        "hide": {
          "type": "boolean",
          "description": "If Home Assistant should initially hide the sensor entity for this property.",
          "default": false
        }
      },
      "required": [
        "property"
      ],
      "title": "Property",
      "description": "Defines a property for an appliance."
    },
    "BinarySensor": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "device_class": {
          "$ref": "#/definitions/BinarySensorDeviceClass"
        }
      },
      "title": "BinarySensor"
    },
    "Climate": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "target": {
          "$ref": "#/definitions/ClimateTarget"
        },
        "unknown_value": {
          "$ref": "#/definitions/UnknownValue"
        },
        "options": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map of integer to string. Required for targets fan_mode, swing_mode, and temperature_unit."
        }
      }
    },
    "Humidifier": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "target": {
          "$ref": "#/definitions/HumidifierTarget"
        },
        "device_class": {
          "$ref": "#/definitions/HumidifierDeviceClass"
        },
        "options": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map of integer to string."
        }
      }
    },
    "Select": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "options": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map of integer to string."
        }
      },
      "required": ["options"]
    },
    "Sensor": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "device_class": {
          "$ref": "#/definitions/SensorDeviceClass"
        },
        "writable": {
          "type": "boolean",
          "description": "If this property is writable (do not set if unknown)."
        },
        "unit": {
          "type": "string",
          "description": "Required if device_class is set, except not allowed when device_class is enum or ph.",
          "examples": [
            "min",
            "kWh",
            "L"
          ]
        },
        "unknown_value": {
          "$ref": "#/definitions/UnknownValue"
        },
        "max_value": {
          "type": "integer",
          "description": "Maximum value (checked when setting property).",
          "examples": [
            5,
            10
          ]
        },
        "options": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map of integer to string. Required if device_class is set to enum."
        },
        "state_class": {
          "$ref": "#/definitions/SensorStateClass"
        }
      }
    },
    "Switch": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "off": {
          "type": "integer",
          "description": "Off value",
          "default": "0"
        },
        "on": {
          "type": "integer",
          "description": "On value",
          "default": "1"
        },
        "device_class": {
          "$ref": "#/definitions/SwitchDeviceClass"
        }
      },
      "title": "BinarySensor"
    },
    "BinarySensorDeviceClass": {
      "type": "string",
      "enum": [
        "battery",
        "battery_charging",
        "carbon_monoxide",
        "cold",
        "connectivity",
        "door",
        "garage_door",
        "gas",
        "heat",
        "light",
        "lock",
        "moisture",
        "motion",
        "moving",
        "occupancy",
        "opening",
        "plug",
        "power",
        "presence",
        "problem",
        "running",
        "safety",
        "smoke",
        "sound",
        "tamper",
        "update",
        "vibration",
        "window"
      ],
      "title": "Device class",
      "description": "Name of any BinarySensorDeviceClass enum."
    },
    "ClimateTarget": {
      "type": "string",
      "enum": [
        "current_humidity",
        "current_temperature",
        "fan_mode",
        "hvac_action",
        "is_on",
        "swing_mode",
        "target_humidity",
        "target_temperature",
        "temperature_unit"
      ],
      "title": "Climate target.",
      "description": "Target property of ClimateEntity."
    },
    "HumidifierTarget": {
      "type": "string",
      "enum": [
        "current_humidity",
        "mode",
        "target_humidity",
        "is_on"
      ],
      "title": "Humidifier target.",
      "description": "Target property of HumidifierEntity."
    },
    "HumidifierDeviceClass": {
      "type": "string",
      "enum": [
        "dehumidifier",
        "humidifier"
      ],
      "title": "Humidifier device class."
      },
    "SensorDeviceClass": {
      "type": "string",
      "enum": [
        "date",
        "enum",
        "timestamp",
        "apparent_power",
        "aqi",
        "atmospheric_pressure",
        "battery",
        "carbon_monoxide",
        "carbon_dioxide",
        "current",
        "data_rate",
        "data_size",
        "distance",
        "duration",
        "energy",
        "energy_storage",
        "frequency",
        "gas",
        "humidity",
        "illuminance",
        "irradiance",
        "moisture",
        "monetary",
        "nitrogen_dioxide",
        "nitrogen_monoxide",
        "nitrous_oxide",
        "ozone",
        "ph",
        "pm1",
        "pm10",
        "pm25",
        "power_factor",
        "power",
        "precipitation",
        "precipitation_intensity",
        "pressure",
        "reactive_power",
        "signal_strength",
        "sound_pressure",
        "speed",
        "sulphur_dioxide",
        "temperature",
        "volatile_organic_compounds",
        "volatile_organic_compounds_parts",
        "voltage",
        "volume",
        "volume_storage",
        "volume_flow_rate",
        "water",
        "weight",
        "wind_speed"
      ],
      "title": "Device class",
      "description": "Name of any SensorDeviceClass enum."
    },
    "SensorStateClass": {
      "type": "string",
      "enum": [
        "measurement",
        "total",
        "total_increasing"
      ],
      "title": "State class",
      "description": "Name of any SensorStateClass. Only allowed for integer properties, defaults to measurement."
    },
    "SwitchDeviceClass": {
      "type": "string",
      "enum": [
        "outlet",
        "switch"
      ],
      "title": "Device class",
      "description": "Name of any SwitchDeviceClass enum."
    },
    "UnknownValue": {
      "type": "integer",
      "description": "The value used by the API to signal unknown value.",
      "examples": [
        255,
        65535
      ]
    }
  }
}
